<%perl>

    # Only applies to reservations lifecycle
    return
        unless $Ticket->QueueObj->Lifecycle->Name eq 'reservations';

    my ( $asset, $msg ) = $Ticket->GetReservationURI;
    unless ( $asset ) {
	push @$Actions, loc('Warning: This reservation needs to \'Refer To\' an asset.');
	return;
    }

    unless ( $Ticket->StartsObj->Unix ) {
	push @$Actions, loc('Warning: This reservation needs a \'Starts\' time.');
        return;
    }

    unless ( $Ticket->DueObj->Unix > $Ticket->StartsObj->Unix ) {
        push @$Actions, loc('Warning: This reservation needs a \'Due\' time, later than \'Starts\'.');
        return;
    }
  
    my $tickets = $Ticket->FindConflicts;
    while ( my $t = $tickets->Next ) {
        push @$Actions, loc('Warning: [_1] already reserved from [_2] to [_3] by reservation [_4]',
                         $asset, $t->StartsObj->AsString, $t->DueAsString, $t->Id);
    }

</%perl>
<%args>
$Actions => undef
$Ticket => undef
</%args>
